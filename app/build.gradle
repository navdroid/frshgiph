apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.navdroid.frshgiph"
        minSdkVersion 19
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        multiDexEnabled true
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        buildConfigField "String", "API_KEY", "\"${getProperty("local.properties", "api_key")}\""
        buildConfigField "String", "BASE_URL", "\"https://api.giphy.com/\""
        kapt {
            arguments {
                arg("room.schemaLocation", "$projectDir/schemas".toString())
            }
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    dataBinding {
        enabled = true;
    }
}


def getProperty(String filename, String propName) {
    def propsFile = rootProject.file(filename)
    if (propsFile.exists()) {
        def props = new Properties()
        props.load(new FileInputStream(propsFile))
        if (props[propName] != null) {
            return props[propName]
        } else {
            print("No such property " + propName + " in file " + filename);
        }
    } else {
        print(filename + " does not exist!")
    }
}

ext {
    supportLibVersion = '27.1.1'
    okhttpVersion = '3.10.0'
    arch = "1.1.1"
    dagger_version = "2.14.1"
    retrofit = "2.4.0"
    roomVersion = "1.1.1"
    mockitoVersion = '2.19.0'
    jUnitVersion = '4.12'
    mockitoKotlinVersion = '1.6.0'
    assertjVersion = '1.7.1'
    archVersion = '1.1.1'
    tests = [
            jUnit         : "junit:junit:${jUnitVersion}",
            mockito       : "org.mockito:mockito-core:${mockitoVersion}",
            mockitoInline : "org.mockito:mockito-inline:${mockitoVersion}",
            mockitoAndroid: "org.mockito:mockito-android:${mockitoVersion}",
            mokitoKotlin  : "com.nhaarman:mockito-kotlin:${mockitoKotlinVersion}",
            assertj       : "org.assertj:assertj-core:${assertjVersion}",
            archore       : "android.arch.core:core-testing:${archVersion}"
    ]
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    implementation 'com.android.support:support-v4:28.0.0'
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.0'
    implementation "com.squareup.okhttp3:okhttp:${okhttpVersion}"
    implementation "com.squareup.okhttp3:logging-interceptor:${okhttpVersion}"
    implementation 'com.github.bumptech.glide:glide:4.7.1'
    implementation "com.squareup.retrofit2:retrofit:${retrofit}"
    implementation "com.squareup.retrofit2:adapter-rxjava2:${retrofit}"
    implementation "com.squareup.retrofit2:converter-jackson:${retrofit}"
    implementation "android.arch.lifecycle:runtime:1.1.1"
    implementation "android.arch.lifecycle:extensions:${arch}"
    kapt "android.arch.lifecycle:compiler:${arch}"
    implementation "android.arch.persistence.room:runtime:${roomVersion}"
    kapt "android.arch.persistence.room:compiler:${roomVersion}"
    implementation "android.arch.persistence.room:rxjava2:${roomVersion}"
    implementation "com.google.dagger:dagger:${dagger_version}"
    kapt "com.google.dagger:dagger-compiler:${dagger_version}"
    kapt "com.google.dagger:dagger-android-processor:${dagger_version}"
    implementation "com.google.dagger:dagger-android:${dagger_version}"
    implementation "com.google.dagger:dagger-android-support:${dagger_version}"
    testImplementation tests.jUnit
    testImplementation tests.mockito
    testImplementation tests.archore
    testImplementation(tests.mokitoKotlin) {
        exclude group: "org.jetbrains.kotlin", module: "kotlin-stdlib"
        exclude group: "org.jetbrains.kotlin", module: "kotlin-runtime"
        exclude group: "org.jetbrains.kotlin", module: "kotlin-reflect"
        exclude group: "org.mockito", module: "mockito-core"
    }
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    implementation 'com.android.support:design:28.0.0'
}
